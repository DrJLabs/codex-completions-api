name: CI

on:
  push:
    branches: [main, main-p, chore/**, feat/**, fix/**]
  pull_request:
    branches: [main, main-p]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read

jobs:
  build-and-test:
    runs-on:
      - self-hosted
      - linux
      - keploy
    env:
      KEPLOY_ENABLED: ${{ vars.KEPLOY_ENABLED || 'false' }}
      KEPLOY_BIN: ${{ vars.KEPLOY_BIN || 'keploy' }}
      KEPLOY_APP_PORT: 11436
      KEPLOY_RECORD_PORT: 16789
      KEPLOY_TEST_PORT: 16790
      KEPLOY_DNS_PORT: 26789
      KEPLOY_HOST_BIND: 127.0.0.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          predicate-quantifier: every
          filters: |
            code:
              - 'server.js'
              - 'src/**'
              - 'auth/**'
              - 'scripts/**'
              - 'playwright*.ts'
              - 'vitest.config.ts'
              - 'eslint.config.mjs'
              - 'package.json'
              - 'package-lock.json'
              - 'Dockerfile'
              - 'docker-compose.yml'
              - 'compose*.yml'
              - 'tests/**'
              - '.github/workflows/**'
              - '!docs/**'
              - '!**/*.md'
              - '!**/*.{png,jpg,jpeg,svg,gif}'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"

      - name: Install dependencies
        run: npm ci || npm install

      - name: Cache Keploy CLI layer
        if: env.KEPLOY_ENABLED == 'true'
        uses: actions/cache@v4
        with:
          path: |
            ~/.keploy
            ~/.cache/keploy
          key: keploy-cli-${{ runner.os }}-${{ hashFiles('scripts/setup-keploy-cli.sh', 'config/keploy.yaml') }}

      - name: Setup Keploy CLI
        if: env.KEPLOY_ENABLED == 'true'
        run: ./scripts/setup-keploy-cli.sh

      - name: Format check
        run: npm run format:check

      - name: Lint (JS)
        run: npm run lint

      - name: Install Playwright deps (for tests)
        if: steps.changes.outputs.code == 'true'
        run: npx playwright install --with-deps chromium

      - name: Run tests (unit+integration+e2e)
        if: steps.changes.outputs.code == 'true'
        env:
          PROXY_API_KEY: codex-ci
        run: npm run test:all

      - name: Skip tests (docs-only change)
        if: steps.changes.outputs.code != 'true'
        run: echo "Docs-only change detected; skipping test suite."

  keploy-dry-run:
    needs: build-and-test
    if: ${{ (vars.KEPLOY_ENABLED || 'false') == 'true' }}
    runs-on:
      - self-hosted
      - linux
      - keploy
    env:
      KEPLOY_ENABLED: ${{ vars.KEPLOY_ENABLED || 'false' }}
      KEPLOY_BIN: ${{ vars.KEPLOY_BIN || 'keploy' }}
      KEPLOY_APP_PORT: 11436
      KEPLOY_RECORD_PORT: 16789
      KEPLOY_TEST_PORT: 16790
      KEPLOY_DNS_PORT: 26789
      KEPLOY_HOST_BIND: 127.0.0.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"

      - name: Install dependencies
        run: npm ci || npm install

      - name: Cache Keploy CLI layer
        uses: actions/cache@v4
        with:
          path: |
            ~/.keploy
            ~/.cache/keploy
          key: keploy-cli-${{ runner.os }}-${{ hashFiles('scripts/setup-keploy-cli.sh', 'config/keploy.yaml') }}

      - name: Setup Keploy CLI
        run: ./scripts/setup-keploy-cli.sh

      - name: Keploy dry-run replay
        env:
          KEPLOY_MODE: test
        run: |
          mkdir -p artifacts/keploy
          export PATH="$HOME/.keploy/bin:$HOME/.local/bin:$PATH"
          START_TS=$(date +%s)
          set -o pipefail
          "$KEPLOY_BIN" test --config-path config/keploy.yaml --path test-results/chat-completions/keploy --test-sets test-set-0 \
            | tee artifacts/keploy/test.log
          END_TS=$(date +%s)
          echo "replay_duration_seconds=$((END_TS-START_TS))" > artifacts/keploy/metrics.txt
          "$KEPLOY_BIN" version > artifacts/keploy/version.txt

      - name: Upload Keploy artifacts
        uses: actions/upload-artifact@v4
        with:
          name: keploy-dry-run
          path: artifacts/keploy
