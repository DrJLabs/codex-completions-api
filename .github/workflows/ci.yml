name: CI

on:
  push:
    branches: [main, main-p, chore/**, feat/**, fix/**]
  pull_request:
    branches: [main, main-p]

permissions:
  contents: read
  pull-requests: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      KEPLOY_ENABLED: ${{ vars.KEPLOY_ENABLED || 'false' }}
      KEPLOY_BIN: ${{ vars.KEPLOY_BIN || 'keploy' }}
      KEPLOY_APP_PORT: 11435
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          predicate-quantifier: every
          filters: |
            code:
              - 'server.js'
              - 'src/**'
              - 'auth/**'
              - 'scripts/**'
              - 'playwright*.ts'
              - 'vitest.config.ts'
              - 'eslint.config.mjs'
              - 'package.json'
              - 'package-lock.json'
              - 'Dockerfile'
              - 'docker-compose.yml'
              - 'compose*.yml'
              - 'tests/**'
              - '.github/workflows/**'
              - '!docs/**'
              - '!**/*.md'
              - '!**/*.{png,jpg,jpeg,svg,gif}'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"

      - name: Install dependencies
        run: npm ci || npm install

      - name: Install Keploy CLI
        if: env.KEPLOY_ENABLED == 'true'
        shell: bash
        run: |
          curl --silent -O -L https://keploy.io/install.sh
          source install.sh
          keploy version

      - name: Format check
        run: npm run format:check

      - name: Lint (JS)
        run: npm run lint

      - name: Install Playwright deps (for tests)
        if: steps.changes.outputs.code == 'true'
        run: npx playwright install --with-deps chromium

      - name: Run tests (unit+integration+e2e)
        if: steps.changes.outputs.code == 'true'
        env:
          PROXY_API_KEY: codex-ci
        run: npm run test:all

      - name: Skip tests (docs-only change)
        if: steps.changes.outputs.code != 'true'
        run: echo "Docs-only change detected; skipping test suite."
