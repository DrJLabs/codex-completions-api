PROXY_API_KEY=your-dev-key
# Keploy integration shelved as of 2025-09-22; replay toggles intentionally omitted.
# Optional overrides for local dev
# PORT=18000
# CODEX_HOME=.codev
# PROXY_ENABLE_PARALLEL_TOOL_CALLS=true
#
# Production note:
#  - Provision `.codex-api/` on the host with Codex config and secrets;
#    docker-compose mounts it at /app/.codex-api and it MUST be writable.

#
# Optional tool-streaming guards (safe defaults keep them disabled)
#
# When true, the proxy will end the SSE stream shortly after emitting complete
# <use_tool>...</use_tool> blocks to avoid confusing clients that expect the
# assistant to stop after tools (e.g., Obsidian Copilot). Default: disabled.
# PROXY_STOP_AFTER_TOOLS=true

# Mode can be "first" (cut immediately after the first tool block) or
# "burst" (default) which waits a short grace period so multiple back-to-back
# tool blocks are delivered together before cutting.
# PROXY_STOP_AFTER_TOOLS_MODE=burst

# Grace window (ms) used when MODE=burst. Default 300.
# PROXY_STOP_AFTER_TOOLS_GRACE_MS=300

# Optional cap on how many tool blocks to allow before cutting (0 = unlimited).
# PROXY_TOOL_BLOCK_MAX=0

# Suppress assistant narrative after the last tool block while still allowing
# the backend to complete normally. Optional dedupe and delimiter helpers can
# clean up repeated blocks or separate them with blank lines.
# PROXY_SUPPRESS_TAIL_AFTER_TOOLS=true

# Drop Codex rollout telemetry (e.g., rollout_path, session_id) from non-stream
# and streaming responses while logging the raw values internally. Defaults to
# false for staged rollout. Enable when ready to sanitize metadata for clients.
# PROXY_SANITIZE_METADATA=true
