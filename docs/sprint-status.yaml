# generated: 2025-10-30 14:49
# project: codex-completions-api
# project_key: codex-completions-api
# tracking_system: file-system
# story_location: {project-root}/docs/stories

# STATUS DEFINITIONS:
# ==================
# Epic Status:
#   - backlog: Epic exists in epic file but not contexted
#   - contexted: Epic tech context created (required before drafting stories)
#
# Story Status:
#   - backlog: Story only exists in epic file
#   - drafted: Story file created in stories folder
#   - ready-for-dev: Draft approved and story context created
#   - in-progress: Developer actively working on implementation
#   - review: Under SM review (via code-review workflow)
#   - done: Story completed
#
# Retrospective Status:
#   - optional: Can be completed but not required
#   - completed: Retrospective has been done
#
# WORKFLOW NOTES:
# ===============
# - Epics should be "contexted" before stories can be "drafted"
# - Stories can be worked in parallel if team capacity allows
# - SM typically drafts next story after previous one is "done" to incorporate learnings
# - Dev moves story to "review", SM reviews, then Dev moves to "done"

generated: 2025-10-30 14:49
project: codex-completions-api
project_key: codex-completions-api
tracking_system: file-system
story_location: "{project-root}/docs/stories"

development_status:
  epic-1: contexted
  1-1-add-app-server-feature-flag-scaffold: done
  1-2-package-codex-cli-with-app-server-capability: done
  1-3-implement-worker-supervisor-and-lifecycle-hooks: review
  1-4-establish-json-rpc-transport-channel: review
  1-5-wire-readiness-and-liveness-probes-to-worker-state: done
  1-6-document-foundation-and-operational-controls: done
  epic-1-retrospective: optional
  epic-2: backlog
  2-1-define-json-rpc-schema-bindings-for-chat: backlog
  2-2-implement-request-translation-layer: backlog
  2-3-implement-streaming-response-adapter: backlog
  2-4-align-error-handling-and-retries: backlog
  2-5-update-regression-suite-for-parity-evidence: backlog
  2-6-document-parity-verification-and-rollout-checklist: backlog
  epic-2-retrospective: optional
  epic-3: backlog
  3-1-structured-logging-for-worker-lifecycle: backlog
  3-2-metrics-pipeline-for-app-server-path: backlog
  3-3-health-probe-integration-tests: backlog
  3-4-incident-alerting-and-runbook-updates: backlog
  3-5-maintenance-flag-and-customer-communication-workflow: backlog
  3-6-security-audit-and-compliance-validation: backlog
  3-7-json-rpc-trace-buffer-retention: backlog
  epic-3-retrospective: optional
  epic-4: backlog
  4-1-stage-rollout-plan-and-environment-toggles: backlog
  4-2-execute-staging-and-canary-validation: backlog
  4-3-full-production-cutover: backlog
  4-4-post-cutover-monitoring-and-rollback-readiness: backlog
  4-5-decommission-proto-artifacts: backlog
  epic-4-retrospective: optional
  epic-5: backlog
  5-1-scope-v1-responses-requirements: backlog
  5-2-extend-json-rpc-bindings-for-responses: backlog
  5-3-implement-v1-responses-handlers: backlog
  5-4-regression-tests-and-documentation: backlog
  5-5-pilot-rollout-and-customer-feedback: backlog
  epic-5-retrospective: optional
