services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: codex-completions-api:latest
    environment:
      - PORT=${PORT:-11435}
      - PROXY_API_KEY=${PROXY_API_KEY?set-in-env}
      - CODEX_MODEL=${CODEX_MODEL:-gpt-5}
      # App-level CORS is disabled; edge handles CORS
      - PROXY_ENABLE_CORS=false
      - PROXY_STREAM_MODE=${PROXY_STREAM_MODE:-incremental}
      - PROXY_TIMEOUT_MS=${PROXY_TIMEOUT_MS:-300000}
      - PROXY_IDLE_TIMEOUT_MS=${PROXY_IDLE_TIMEOUT_MS:-15000}
      - PROXY_STREAM_IDLE_TIMEOUT_MS=${PROXY_STREAM_IDLE_TIMEOUT_MS:-300000}
      - PROXY_SSE_KEEPALIVE_MS=${PROXY_SSE_KEEPALIVE_MS:-15000}
      - CODEX_BIN=${CODEX_BIN:-codex}
    # Mount Codex CLI + credentials from host for in-container use
    volumes:
      - ~/.codex:/home/node/.codex:ro
      - ~/.cargo/bin/codex:/usr/local/bin/codex:ro
    networks:
      - traefik
    # Expose app port locally for direct localhost integrations (e.g., Roo)
    ports:
      - 127.0.0.1:11435:11435
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik

      # Backend service port inside the container
      - traefik.http.services.codex-api.loadbalancer.server.port=11435

      # Protected API router
      - traefik.http.routers.codex-api.rule=Host(`codex-api.onemainarmy.com`) && PathPrefix(`/v1`)
      - traefik.http.routers.codex-api.entrypoints=websecure
      - traefik.http.routers.codex-api.tls=true
      # Apply CORS and security headers before ForwardAuth; add rate limiting
      - traefik.http.routers.codex-api.middlewares=codex-cors,codex-headers,codex-forwardauth,codex-ratelimit

      # CORS preflight (OPTIONS): bypass ForwardAuth entirely; Traefik responds with headers
      - traefik.http.routers.codex-preflight.rule=Host(`codex-api.onemainarmy.com`) && PathPrefix(`/v1`) && Method(`OPTIONS`)
      - traefik.http.routers.codex-preflight.entrypoints=websecure
      - traefik.http.routers.codex-preflight.tls=true
      - traefik.http.routers.codex-preflight.priority=10000
      - traefik.http.routers.codex-preflight.middlewares=codex-cors,codex-headers
      - traefik.http.routers.codex-preflight.service=noop@internal

      

      # ForwardAuth middleware (edge bearer auth)
      - traefik.http.middlewares.codex-forwardauth.forwardauth.address=http://127.0.0.1:18080/verify
      - traefik.http.middlewares.codex-forwardauth.forwardauth.trustForwardHeader=true
      - traefik.http.middlewares.codex-forwardauth.forwardauth.authRequestHeaders=Authorization

      # CORS middleware (edge)
      - traefik.http.middlewares.codex-cors.headers.accessControlAllowMethods=GET,POST,HEAD,OPTIONS
      - traefik.http.middlewares.codex-cors.headers.accessControlAllowHeaders=Authorization,Content-Type,Accept,OpenAI-Organization,OpenAI-Beta,X-Requested-With,X-Stainless-OS,X-Stainless-Lang,X-Stainless-Arch,X-Stainless-Runtime,X-Stainless-Runtime-Version,X-Stainless-Package-Version,X-Stainless-Timeout,X-Stainless-Retry-Count
      - traefik.http.middlewares.codex-cors.headers.customResponseHeaders.Access-Control-Allow-Origin=*
      - traefik.http.middlewares.codex-cors.headers.accessControlAllowCredentials=false
      - traefik.http.middlewares.codex-cors.headers.accessControlMaxAge=600
      - traefik.http.middlewares.codex-cors.headers.accessControlExposeHeaders=Content-Type
      - traefik.http.middlewares.codex-cors.headers.addVaryHeader=true

      # Security headers middleware (edge)
      - traefik.http.middlewares.codex-headers.headers.stsSeconds=31536000
      - traefik.http.middlewares.codex-headers.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.codex-headers.headers.stsPreload=true
      - traefik.http.middlewares.codex-headers.headers.frameDeny=true
      - traefik.http.middlewares.codex-headers.headers.contentTypeNosniff=true
      - traefik.http.middlewares.codex-headers.headers.referrerPolicy=no-referrer
      - traefik.http.middlewares.codex-headers.headers.permissionsPolicy=camera=(), microphone=(), geolocation=()
      - traefik.http.middlewares.codex-headers.headers.customResponseHeaders.X-DNS-Prefetch-Control=off

      # Rate limit middleware
      - traefik.http.middlewares.codex-ratelimit.ratelimit.average=${RATE_LIMIT_AVG:-200}
      - traefik.http.middlewares.codex-ratelimit.ratelimit.burst=${RATE_LIMIT_BURST:-400}

      # Public health router (no auth)
      - traefik.http.routers.codex-health.rule=Host(`codex-api.onemainarmy.com`) && Path(`/healthz`)
      - traefik.http.routers.codex-health.entrypoints=websecure
      - traefik.http.routers.codex-health.tls=true
      - traefik.http.routers.codex-health.service=codex-api
      - traefik.http.routers.codex-health.middlewares=codex-headers
    restart: unless-stopped

  auth:
    image: node:18-alpine
    working_dir: /app
    command: node server.mjs
    environment:
      - PORT=8080
      - PROXY_API_KEY=${PROXY_API_KEY?set-in-env}
      - AUTH_REALM=api
    volumes:
      - ./auth:/app:ro
    # Expose to host for Traefik host service to call via 127.0.0.1
    ports:
      - 127.0.0.1:18080:8080
    networks:
      - traefik
    restart: unless-stopped

networks:
  traefik:
    external: true
