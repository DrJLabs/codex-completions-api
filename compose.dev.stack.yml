services:
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile
    image: codex-completions-api:dev
    environment:
      - PORT=11435
      - PROXY_ENV=dev
      - PROXY_API_KEY=${PROXY_API_KEY?set-in-.env.dev}
      - CODEX_HOME=/home/node/.codex
      - CODEX_MODEL=${CODEX_MODEL:-gpt-5}
      - CODEX_FORCE_PROVIDER=
      - PROXY_STREAM_MODE=${PROXY_STREAM_MODE:-incremental}
      - PROXY_TIMEOUT_MS=${PROXY_TIMEOUT_MS:-300000}
      - PROXY_IDLE_TIMEOUT_MS=${PROXY_IDLE_TIMEOUT_MS:-15000}
      - PROXY_STREAM_IDLE_TIMEOUT_MS=${PROXY_STREAM_IDLE_TIMEOUT_MS:-300000}
      - PROXY_SSE_KEEPALIVE_MS=${PROXY_SSE_KEEPALIVE_MS:-15000}
      # Default to proto shim for easy local testing; override with env CODEX_BIN=codex when using real CLI
      - CODEX_BIN=${CODEX_BIN:-/app/scripts/fake-codex-proto.js}
    ports:
      - 127.0.0.1:${DEV_PORT:-18010}:11435
    volumes:
      # Project-local Codex config; writable for rollouts/sessions
      - ./.codev:/home/node/.codex
      # Mount scripts so the proto shim is available as /app/scripts/fake-codex-proto.js
      - ./scripts:/app/scripts:ro
    networks:
      - traefik
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik

      # Backend service port inside the container
      - traefik.http.services.codex-dev-api.loadbalancer.server.port=11435

      # Protected API router (dev)
      - traefik.http.routers.codex-dev-api.rule=Host(`codex-dev.onemainarmy.com`) && PathPrefix(`/v1`)
      - traefik.http.routers.codex-dev-api.entrypoints=websecure
      - traefik.http.routers.codex-dev-api.tls=true
      - traefik.http.routers.codex-dev-api.middlewares=codex-dev-cors,codex-dev-headers,codex-dev-ratelimit,codex-dev-forwardauth

      # CORS preflight (OPTIONS): bypass ForwardAuth entirely; Traefik responds with headers
      - traefik.http.routers.codex-dev-preflight.rule=Host(`codex-dev.onemainarmy.com`) && PathPrefix(`/v1`) && Method(`OPTIONS`)
      - traefik.http.routers.codex-dev-preflight.entrypoints=websecure
      - traefik.http.routers.codex-dev-preflight.tls=true
      - traefik.http.routers.codex-dev-preflight.priority=10000
      - traefik.http.routers.codex-dev-preflight.middlewares=codex-dev-cors,codex-dev-headers,codex-dev-ratelimit
      - traefik.http.routers.codex-dev-preflight.service=noop@internal

      # ForwardAuth middleware (edge bearer auth)
      - traefik.http.middlewares.codex-dev-forwardauth.forwardauth.address=http://127.0.0.1:18081/verify
      - traefik.http.middlewares.codex-dev-forwardauth.forwardauth.trustForwardHeader=true
      - traefik.http.middlewares.codex-dev-forwardauth.forwardauth.authRequestHeaders=Authorization

      # Public models router (no auth): allow clients to discover available models
      - traefik.http.routers.codex-dev-models.rule=Host(`codex-dev.onemainarmy.com`) && (Path(`/v1/models`) || Path(`/v1/models/`))
      - traefik.http.routers.codex-dev-models.entrypoints=websecure
      - traefik.http.routers.codex-dev-models.tls=true
      - traefik.http.routers.codex-dev-models.priority=9000
      - traefik.http.routers.codex-dev-models.middlewares=codex-dev-cors,codex-dev-headers,codex-dev-ratelimit
      - traefik.http.routers.codex-dev-models.service=codex-dev-api

      # CORS middleware (edge)
      - traefik.http.middlewares.codex-dev-cors.headers.accessControlAllowMethods=GET,POST,HEAD,OPTIONS
      - traefik.http.middlewares.codex-dev-cors.headers.accessControlAllowHeaders=Authorization,Content-Type,Accept,OpenAI-Organization,OpenAI-Beta,OpenAI-Version,OpenAI-Project,X-Requested-With,X-Stainless-OS,X-Stainless-Lang,X-Stainless-Arch,X-Stainless-Runtime,X-Stainless-Runtime-Version,X-Stainless-Package-Version,X-Stainless-Timeout,X-Stainless-Retry-Count,dangerously-allow-browser
      - traefik.http.middlewares.codex-dev-cors.headers.customResponseHeaders.Access-Control-Allow-Origin=*
      - traefik.http.middlewares.codex-dev-cors.headers.accessControlAllowCredentials=false
      - traefik.http.middlewares.codex-dev-cors.headers.accessControlMaxAge=600
      - traefik.http.middlewares.codex-dev-cors.headers.accessControlExposeHeaders=Content-Type
      - traefik.http.middlewares.codex-dev-cors.headers.addVaryHeader=true

      # Security headers middleware (edge)
      - traefik.http.middlewares.codex-dev-headers.headers.stsSeconds=31536000
      - traefik.http.middlewares.codex-dev-headers.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.codex-dev-headers.headers.stsPreload=true
      - traefik.http.middlewares.codex-dev-headers.headers.frameDeny=true
      - traefik.http.middlewares.codex-dev-headers.headers.contentTypeNosniff=true
      - traefik.http.middlewares.codex-dev-headers.headers.referrerPolicy=no-referrer
      - traefik.http.middlewares.codex-dev-headers.headers.permissionsPolicy=camera=(), microphone=(), geolocation=(), interest-cohort=()
      - traefik.http.middlewares.codex-dev-headers.headers.customResponseHeaders.X-DNS-Prefetch-Control=off

      # Rate limit middleware
      - traefik.http.middlewares.codex-dev-ratelimit.ratelimit.average=${DEV_RATE_LIMIT_AVG:-100}
      - traefik.http.middlewares.codex-dev-ratelimit.ratelimit.burst=${DEV_RATE_LIMIT_BURST:-200}

      # Public health router (no auth)
      - traefik.http.routers.codex-dev-health.rule=Host(`codex-dev.onemainarmy.com`) && Path(`/healthz`)
      - traefik.http.routers.codex-dev-health.entrypoints=websecure
      - traefik.http.routers.codex-dev-health.tls=true
      - traefik.http.routers.codex-dev-health.service=codex-dev-api
      - traefik.http.routers.codex-dev-health.middlewares=codex-dev-headers

  auth-dev:
    image: node:18-alpine
    working_dir: /app
    command: node server.mjs
    environment:
      - PORT=8080
      - PROXY_API_KEY=${PROXY_API_KEY?set-in-.env.dev}
      - AUTH_REALM=api-dev
    volumes:
      - ./auth:/app:ro
    ports:
      - 127.0.0.1:18081:8080
    networks:
      - traefik
    restart: unless-stopped

networks:
  traefik:
    external: true
